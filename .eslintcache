[{"D:\\redux\\src\\index.js":"1","D:\\redux\\src\\swDev.js":"2","D:\\redux\\src\\App.js":"3","D:\\redux\\src\\Redux\\Store.js":"4","D:\\redux\\src\\Redux\\Reducer\\reducer.js":"5","D:\\redux\\src\\Header.jsx":"6","D:\\redux\\src\\components\\Form.jsx":"7","D:\\redux\\src\\components\\Home.jsx":"8","D:\\redux\\src\\Redux\\Actions\\type.js":"9","D:\\redux\\src\\Redux\\Reducer\\index.js":"10","D:\\redux\\src\\Redux\\Actions\\action.js":"11","D:\\redux\\src\\components\\FormEdit.jsx":"12"},{"size":543,"mtime":1617474905303,"results":"13","hashOfConfig":"14"},{"size":200,"mtime":1617468670634,"results":"15","hashOfConfig":"14"},{"size":666,"mtime":1617542376870,"results":"16","hashOfConfig":"14"},{"size":423,"mtime":1617475083197,"results":"17","hashOfConfig":"14"},{"size":1067,"mtime":1617543937332,"results":"18","hashOfConfig":"14"},{"size":1565,"mtime":1617534708071,"results":"19","hashOfConfig":"14"},{"size":12678,"mtime":1617540072735,"results":"20","hashOfConfig":"14"},{"size":4066,"mtime":1617541683638,"results":"21","hashOfConfig":"14"},{"size":213,"mtime":1617543899776,"results":"22","hashOfConfig":"14"},{"size":192,"mtime":1617475047172,"results":"23","hashOfConfig":"14"},{"size":1751,"mtime":1617544112002,"results":"24","hashOfConfig":"14"},{"size":11491,"mtime":1617544256439,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15tb4vl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\redux\\src\\index.js",[],["53","54"],"D:\\redux\\src\\swDev.js",[],"D:\\redux\\src\\App.js",[],"D:\\redux\\src\\Redux\\Store.js",[],"D:\\redux\\src\\Redux\\Reducer\\reducer.js",[],"D:\\redux\\src\\Header.jsx",[],"D:\\redux\\src\\components\\Form.jsx",["55"],"import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router\";\r\nimport { login } from '../Redux/Actions/action';\r\n\r\nconst Form = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [FirstName, setFirstName] = useState(\"\");\r\n    const [LastName, setLastName] = useState(\"\");\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Phone, setPhone] = useState(\"\");\r\n    const [DateofBirth, setDateofBirth] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n    const [Country, setCountry] = useState(\"\");\r\n    const [City, setCity] = useState(\"\");\r\n    const [State, setState] = useState(\"\");\r\n    \r\n\r\n    /////// Error State ////////\r\n    const [ErrFirstname, SetErrFirstname] = useState();\r\n    const [ErrLastname, SetErrLastname] = useState();\r\n    const [ErrEmail, SetErrEmail] = useState();\r\n    const [ErrCountry, SetErrCountry] = useState();\r\n    const [ErrCity, SetErrCity] = useState();\r\n    const [ErrState, SetErrState] = useState();\r\n    const [ErrPhone, SetErrPhone] = useState();\r\n    const [ErrPassword, SetErrPassword] = useState();\r\n    const [ErrDateofBirth, SetErrDateofBirth] = useState();\r\n    const [ErrConfirmPassword, SetErrConfirmPassword] = useState();\r\n\r\n\r\n    const SubmitHandle = (event) =>{\r\n        event.preventDefault();\r\n\r\n        var errorcount = 0;\r\n\r\n        if (FirstName === \"\" || FirstName.trim() === \"\") {\r\n            SetErrFirstname(\"*FirstName is required.\");\r\n            errorcount++;\r\n        }\r\n       else if (!/^[a-zA-Z ]*$/g.test(FirstName)) {\r\n        SetErrFirstname(\"FirstName contain only letters\");\r\n        errorcount++;\r\n        }\r\n         else {\r\n            SetErrFirstname(\"\");\r\n        }\r\n\r\n        if (LastName === \"\" || LastName.trim() === \"\") {\r\n            SetErrLastname(\"*LastName is required.\");\r\n            errorcount++;\r\n        }\r\n       else if (!/^[a-zA-Z ]*$/g.test(LastName)) {\r\n        SetErrLastname(\"LastName contain only letters\");\r\n        errorcount++;\r\n        }\r\n         else {\r\n            SetErrLastname(\"\");\r\n        }\r\n\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (Email === \"\" || Email.trim() === \"\") {\r\n            SetErrEmail(\"*Email is required.\");\r\n            errorcount++;\r\n        } else if (!pattern.test(Email)) {\r\n\r\n            SetErrEmail(\"*Email is invalid.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrEmail(\"\");\r\n        }\r\n\r\n        if (Country === \"\" || Country.trim() === \"\") {\r\n            SetErrCountry(\"*Country is required.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrCountry(\"\");\r\n        }\r\n\r\n        if (City === \"\" || City.trim() === \"\") {\r\n            SetErrCity(\"*City is required.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrCity(\"\");\r\n        }\r\n\r\n        if (State === \"\" || State.trim() === \"\") {\r\n            SetErrState(\"*State is required.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrState(\"\");\r\n        }\r\n\r\n        if (Phone === \"\" || Phone.trim() === \"\") {\r\n            SetErrPhone(\"*Phone number is required.\");\r\n            errorcount++;\r\n        } else if (Phone.length < 10) {\r\n            SetErrPhone(\"*Phone number should be greater than 10.\");\r\n            errorcount++;\r\n        }\r\n        else if (Phone.length > 10) {\r\n            SetErrPhone(\"*Phone number should be smaller than 10.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrPhone(\"\");\r\n        }\r\n\r\n        if (Password === \"\" || Password.trim() === \"\") {\r\n            SetErrPassword(\"*Password is required.\");\r\n            errorcount++;\r\n        } else if (Password.length < 6) {\r\n            SetErrPassword(\"*Password should be greater than 6.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrPassword(\"\");\r\n        }\r\n        // alert(signUp.ConfirmPassword)\r\n        if (Password === \"\" || Password.trim() === \"\") {\r\n            // alert('ok')\r\n            SetErrConfirmPassword(\"*Password is required.\");\r\n            errorcount++;\r\n        } else if (Password !== confirmPassword) {\r\n            SetErrConfirmPassword(\"*Password did not match.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrConfirmPassword(\"\")\r\n        }\r\n\r\n        if (DateofBirth === \"\" || DateofBirth.trim() === \"\") {\r\n            SetErrDateofBirth(\"*Date of Birth is required.\");\r\n            errorcount++;\r\n        } else {\r\n            SetErrDateofBirth(\"\");\r\n        }\r\n\r\n        if (errorcount === 0) {\r\n        const result = {\r\n            FirstName: FirstName,\r\n            LastName: LastName,\r\n            Email:Email,\r\n            Phone:Phone,\r\n            DateofBirth:DateofBirth,\r\n            Password:Password,\r\n            Address:{\r\n                Country:Country,\r\n                City:City,\r\n                State:State,\r\n            }\r\n          };\r\n          props.login(result);\r\n          history.push('/Home');\r\n        }\r\n    }\r\n\r\n    console.log(\"hello\",Country);\r\n   \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <section class=\"Login\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-8 offset-sm-2\">\r\n                            <div class=\"LoginCard default-form\">\r\n                                <h5>Form</h5>\r\n                                <form onSubmit={(event)=>SubmitHandle(event)}>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">First Name</label>\r\n                                        <input \r\n                                        type=\"text\" \r\n                                        class=\"form-control\" \r\n                                        placeholder=\"Name\" \r\n                                        name=\"FirstName\" \r\n                                        \r\n                                        onChange={(event)=>setFirstName(event.target.value)}/>\r\n                                        <p className=\"text-danger\">{ErrFirstname}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Last Name</label>\r\n                                        <input \r\n                                        type=\"text\" \r\n                                        class=\"form-control\" \r\n                                        placeholder=\"Name\" \r\n                                        name=\"LastName\" \r\n                                        onChange={(event)=>setLastName(event.target.value)}/>\r\n                                        <p className=\"text-danger\">{ErrLastname}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Email</label>\r\n                                        <input type=\"email\" class=\"form-control\" placeholder=\"Email\" name=\"Email\" onChange={(event)=>setEmail(event.target.value)} />\r\n                                        <p className=\"text-danger\">{ErrEmail}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Phone</label>\r\n                                        <input type=\"number\" class=\"form-control\" placeholder=\"phone\" name=\"Phone\" onChange={(event)=>setPhone(event.target.value)} />\r\n                                        <p className=\"text-danger\">{ErrPhone}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Country</label>\r\n                                        <select name=\"Country\" id=\"\" class=\"form-control\" onChange={(event)=>setCountry(event.target.value)}>\r\n                                        <option value=\"\" selected disabled>--select--</option>\r\n                                            <option value=\"India\">India</option>\r\n                                            <option value=\"USA\">USA</option>\r\n                                            <option value=\"UAE\">UAE</option>\r\n                                        </select>\r\n                                        <p className=\"text-danger\">{ErrCountry}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">City</label>\r\n                                        <select name=\"City\" id=\"\" class=\"form-control\" onChange={(event)=>setCity(event.target.value)}>\r\n                                        <option value=\"\" selected disabled>--select--</option>\r\n                                            <option value=\"Indore\">Indore</option>\r\n                                            <option value=\"New York\">New York</option>\r\n                                            <option value=\"Ahmedabad\">Ahmedabad</option>\r\n                                            <option value=\"Germany\">Germany</option>\r\n                                            <option value=\"Mumbai\">Mumbai</option>\r\n                                            <option value=\"Dubai\">Dubai</option>\r\n                                        </select>\r\n                                        <p className=\"text-danger\">{ErrCity}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">State</label>\r\n                                        \r\n                                        <select name=\"State\" id=\"\" class=\"form-control\" onChange={(event)=>setState(event.target.value)}>\r\n                                        <option value=\"\" selected disabled>--select--</option>\r\n                                            <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                                            <option value=\"Maharashtra\">Maharashtra</option>\r\n                                            <option value=\"Gujarat\">Gujarat</option>\r\n                                            <option value=\"Gujarat\">Gujarat</option>\r\n                                            <option value=\"no state\">no state</option>\r\n                                        </select>\r\n                                        <p className=\"text-danger\">{ErrState}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Date of Birth</label>\r\n                                        <input type=\"date\" className=\"form-control\" name=\"DateofBirth\" onChange={(event)=>setDateofBirth(event.target.value)}/>\r\n                                        <p className=\"text-danger\">{ErrDateofBirth}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" name=\"Password\" onChange={(event)=>setPassword(event.target.value)}  />\r\n                                        <p className=\"text-danger\">{ErrPassword}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"\">Confirm Password</label>\r\n                                        <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" name=\"password\" name=\"Password\" onChange={(event)=>setconfirmPassword(event.target.value)}/>\r\n                                        <p className=\"text-danger\">{ErrConfirmPassword}</p>\r\n                                    </div>\r\n                                    <div class=\"form-group text-center\">\r\n                                        <button type=\"submit\" class=\"cardbutton\">Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { login })(Form);","D:\\redux\\src\\components\\Home.jsx",["56"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {FetchList} from \"../Redux/Actions/action\"\r\nimport {deleteuser} from \"../Redux/Actions/action\"\r\n\r\nconst Home = (props) => {\r\n\r\n    useEffect(()=>{\r\n      props.onFetch();\r\n      props.onDelete();\r\n    },[])\r\n    \r\n\r\n    console.log(\"data\",props.posts.data)\r\n\r\n    return (\r\n        <div className=\"Card_Section\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n\r\n                       <div className=\"card\" style={{width:\"100%\"}}>\r\n                           <div className=\"card-header\">\r\n                               <Link to=\"/form\" className=\"btn btn-primary float-right\">Add</Link>\r\n                           </div>\r\n                           <div className=\"card-body\">\r\n                           <table class=\"table\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">FullName</th>\r\n                                    <th scope=\"col\">Email</th>\r\n                                    <th scope=\"col\">Phone</th>\r\n                                    <th scope=\"col\">Country</th>\r\n                                    <th scope=\"col\">City</th>\r\n                                    <th scope=\"col\">State</th>\r\n                                    <th scope=\"col\">Date of Birth</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {\r\n                                    props.posts.data ?\r\n                                  props.posts.data &&  props.posts.data.map((post,idx) => {\r\n                                        return(\r\n                                        <tr>\r\n                                        <th scope=\"row\" key={props.id}>{idx+1}</th>\r\n                                        <td>{post.FirstName} &nbsp; {post.LastName}</td>\r\n                                        <td>{post.Email}</td>\r\n                                        <td>{post.Phone}</td>\r\n                                        <th>{post.Address.Country}</th>\r\n                                        <td>{post.Address.City}</td>\r\n                                        <td>{post.Address.State}</td>\r\n                                        <td>{post.DateofBirth}</td>\r\n                                        <td>\r\n                                        <Link to={`/edit-user/${post.id}`}>\r\n                                        <button type=\"button\" className=\"btn btn-warning\" style={{color:\"#fff\",cursor:\"pointer\",fontSize:\"12px\"}}>Edit</button>\r\n                                        </Link>\r\n                                             &nbsp; \r\n                                        <button type=\"button\" className=\"btn btn-danger\" style={{color:\"#fff\",fontSize:\"12px\"}} onClick={() => props.onDelete(post.id)} >Delete</button></td>\r\n                                    </tr>\r\n                                        )\r\n                                    })\r\n                                    :\r\n                                    <p>Loading...</p>\r\n                                }\r\n\r\n                            </tbody>\r\n                        </table>\r\n                           </div>\r\n                       </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps =(dispatch)=> {\r\n   return {\r\n     onFetch: async() =>{\r\n            await dispatch(FetchList());\r\n        },\r\n        onDelete: async(id) =>{\r\n            await dispatch(deleteuser(id));\r\n        },\r\n    }\r\n  };\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts.items,\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","D:\\redux\\src\\Redux\\Actions\\type.js",[],"D:\\redux\\src\\Redux\\Reducer\\index.js",[],"D:\\redux\\src\\Redux\\Actions\\action.js",["57"],"D:\\redux\\src\\components\\FormEdit.jsx",["58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":250,"column":132,"nodeType":"68","endLine":250,"endColumn":147},{"ruleId":"69","severity":1,"message":"70","line":12,"column":7,"nodeType":"71","endLine":12,"endColumn":9,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":41,"nodeType":"75","messageId":"76","endLine":1,"endColumn":50},{"ruleId":"69","severity":1,"message":"70","line":12,"column":9,"nodeType":"71","endLine":12,"endColumn":11,"suggestions":"77"},{"ruleId":"73","severity":1,"message":"78","line":19,"column":22,"nodeType":"75","messageId":"76","endLine":19,"endColumn":33},{"ruleId":"73","severity":1,"message":"79","line":20,"column":12,"nodeType":"75","messageId":"76","endLine":20,"endColumn":27},{"ruleId":"73","severity":1,"message":"80","line":20,"column":29,"nodeType":"75","messageId":"76","endLine":20,"endColumn":47},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["83"],"no-unused-vars","'EDIT_USER' is defined but never used.","Identifier","unusedVar",["84"],"'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setconfirmPassword' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [props]",{"range":"88","text":"89"},{"range":"90","text":"89"},[333,335],"[props]",[344,346]]